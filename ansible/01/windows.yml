- name: Windows Check
  hosts: domain
  gather_facts: False

  tasks:

  - name: Ping Check
    win_ping:

  - name: Domain Member Check
    check_mode: False
    changed_when: False
    ansible.windows.win_powershell:
      script: |
        (gwmi win32_computersystem).partofdomain
        (gwmi win32_computersystem).domain
    register: domain
    failed_when:
      - domain.output[0] != true

  - name: Print Domain Name
    debug:
      msg: Domain name is {{ domain.output[1] }}

  - name: Domain Users Check
    check_mode: False
    changed_when: False
    when: inventory_hostname in groups['win']
    ansible.windows.win_powershell:
      script: |
        whoami /fqdn
    register: whoami
    vars:
      ansible_become: true
      ansible_become_method: runas
      ansible_become_user: "{{ domain.output[1] }}\\{{ item.username }}"
      ansible_become_password: "{{ item.password }}"
    loop: "{{ domain_users }}"
    loop_control:
      label: "{{ item.username }}"

  - name: Print Users Whoami Result
    when: inventory_hostname in groups['win']
    debug:
      msg:
        - "{{ item.output[0] }}"
    loop: "{{ whoami.results }}"
    loop_control:
      label: "{{ item.item.username }}"

  - name: DisableCMD / DisableRegistry GPO Check
    check_mode: False
    changed_when: False
    when: inventory_hostname in groups['win']
    ansible.windows.win_powershell:
      script: |
        gpresult /Z | Select-String "{{ item }}" -Context 1,2
    register: gpresult_1
    vars:
      ansible_become: true
      ansible_become_method: runas
      ansible_become_user: "{{ domain.output[1] }}\\{{ domain_users[0].username }}"
      ansible_become_password: "{{ domain_users[0].password }}"
    failed_when:
      - "'disabled' in gpresult_1.output[0].Context.PostContext"
    loop:
      - DisableCMD
      - DisableRegistry
    
  - name: Print DisableCMD / DisableRegistry GPO Check Result
    when: inventory_hostname in groups['win']
    debug:
      msg:
        - "{{ item.output[0].Context.PreContext }}"
        - "{{ item.output[0].Line }}"
        - "{{ item.output[0].Context.PostContext }}"
    loop: "{{ gpresult_1.results }}"
    loop_control:
      label: "{{ item.item }}"

  - name: Firefox Disallow GPO Check
    check_mode: False
    changed_when: False
    when: inventory_hostname in groups['win']
    ansible.windows.win_powershell:
      script: |
        gpresult /Z | Select-String "ItemData" -Context 1,2
    register: gpresult_2
    vars:
      ansible_become: true
      ansible_become_method: runas
      ansible_become_user: "{{ domain.output[1] }}\\{{ domain_users[1].username }}"
      ansible_become_password: "{{ domain_users[1].password }}"
    failed_when:
      - "'disabled' in gpresult_2.output[0].Context.PostContext"
    
  - name: Print Firefox Disallow GPO Check Result
    when: inventory_hostname in groups['win']
    debug:
      msg:
        - "{{ gpresult_2.output[0].Context.PreContext }}"
        - "{{ gpresult_2.output[0].Line }}"
        - "{{ gpresult_2.output[0].Context.PostContext }}"

  - name: Get Firefox Disallow GPO Path Value
    check_mode: False
    changed_when: False
    when: inventory_hostname in groups['win']
    vars:
      codes_str: "{{ gpresult_2.output[0].Context.PostContext | regex_search('\\[(.*)\\]', '\\1') }}"
      codes: "{{ codes_str.split(', ') | map('int') | list }}"
      filtered_codes: "{{ codes | reject('equalto', 0) | list }}"
    ansible.windows.win_powershell:
      script: |
        $codes = @({{ filtered_codes | join(', ')  }})
        $result = -join ($codes | ForEach-Object { [char]$_ })
        Write-Output $result
    register: result
  
  - name: Print Firefox Disallow GPO Path Value
    when: inventory_hostname in groups['win']
    debug:
      msg: "{{ result.output }}"